<UserControl x:Class="FilesExplorerInDB_WPF.View.Explorer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:helper="clr-namespace:FilesExplorerInDB_WPF.Helper"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModel="clr-namespace:FilesExplorerInDB_WPF.ViewModel"
             x:Name="userControl"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <Grid AllowDrop="True">
        <ListView x:Name="ListView_Explorer"
                  VerticalContentAlignment="Center"
                  helper:FileDragDropHelper.FileDragDropTarget="{Binding}"
                  helper:FileDragDropHelper.IsFileDragDropEnabled="True"
                  AllowDrop="True"
                  ItemsSource="{Binding ExplorerItems.ExplorerList, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                  SelectedIndex="{Binding ExplorerItems.SelectIndex, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}">
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="打开" Visibility="{Binding ContextMenuModel.IsVisibleOpen, Mode=TwoWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CommandOpen, Mode=OneWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="刷新" Visibility="{Binding ContextMenuModel.IsVisibleRefresh, Mode=TwoWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CommandRefresh, Mode=OneWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="剪切" Visibility="{Binding ContextMenuModel.IsVisibleCut, Mode=TwoWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CommandCut, Mode=OneWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="复制" Visibility="{Binding ContextMenuModel.IsVisibleCopy, Mode=TwoWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CommandCopy, Mode=OneWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="粘贴" Visibility="{Binding ContextMenuModel.IsVisiblePaste, Mode=TwoWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CommandPaste, Mode=OneWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="新建文件夹" Visibility="{Binding ContextMenuModel.IsVisibleCreate, Mode=TwoWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CommandCreate, Mode=OneWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="删除" Visibility="{Binding ContextMenuModel.IsVisibleDelete, Mode=TwoWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CommandDelete, Mode=OneWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="重命名" Visibility="{Binding ContextMenuModel.IsVisibleRename, Mode=TwoWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CommandRename, Mode=OneWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="属性" Visibility="{Binding ContextMenuModel.IsVisibleProperty, Mode=TwoWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CommandProperty, Mode=OneWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <i:Interaction.Triggers>
                        <i:EventTrigger>
                            <i:InvokeCommandAction Command="{Binding LoadedContextMenu, Mode=OneWay}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.View>
                <GridView>
                    <GridViewColumn>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Image Height="30" Source="{Binding ImageSource}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="名称">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Background="{x:Null}"
                                         BorderBrush="{x:Null}"
                                         BorderThickness="{Binding BorderThickness}"
                                         Cursor="{Binding Cursor}"
                                         Focusable="{Binding Focusable}"
                                         IsReadOnly="{Binding IsReadOnly}"
                                         Text="{Binding Name, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding CommandPreviewKeyDown, Mode=OneWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}" />
                                    </TextBox.InputBindings>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="LostFocus">
                                            <i:InvokeCommandAction Command="{Binding CommandLostFocus, Mode=OneWay, Source={x:Static viewModel:ExplorerItemsVM.GetInstance}}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Type}" Header="类型" />
                    <GridViewColumn DisplayMemberBinding="{Binding Size}" Header="大小" />
                    <GridViewColumn DisplayMemberBinding="{Binding CreationTime}" Header="创建时间" />
                    <GridViewColumn DisplayMemberBinding="{Binding ModifyTime}" Header="修改时间" />
                    <GridViewColumn DisplayMemberBinding="{Binding AccessTime}" Header="访问时间" />
                </GridView>
            </ListView.View>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding DblClick, Mode=OneWay}" CommandParameter="{Binding SelectedItem, ElementName=ListView_Explorer}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding Click, Mode=OneWay}" CommandParameter="{Binding SelectedItem, ElementName=ListView_Explorer}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding ClickMouseLeftButtonDown, Mode=OneWay}" CommandParameter="{Binding ItemsSource, ElementName=ListView_Explorer}" />
                </i:EventTrigger>
                <i:EventTrigger>
                    <i:InvokeCommandAction Command="{Binding Click, Mode=OneWay}" CommandParameter="{Binding ItemsSource, ElementName=ListView_Explorer}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListView>
    </Grid>
</UserControl>