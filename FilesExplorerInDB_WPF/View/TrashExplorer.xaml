<UserControl
    x:Class="FilesExplorerInDB_WPF.View.TrashExplorer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:FilesExplorerInDB_WPF.ViewModel"
    x:Name="userControl"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Grid AllowDrop="True">
        <ListView
            x:Name="ListView_Explorer"
            VerticalContentAlignment="Center"
            ItemsSource="{Binding ExplorerItems.ExplorerList, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
            SelectedIndex="{Binding ExplorerItems.SelectIndex, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}">
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="刷新" Visibility="{Binding ContextMenuModel.IsVisibleRefresh, Mode=TwoWay, Source={x:Static viewModel:TrashExplorerVM.GetInstance}}">
                        <MenuItem.Icon>
                            <Image Source="{Binding ContextMenuModel.RefreshImage, Source={x:Static viewModel:TrashExplorerVM.GetInstance}}" />
                        </MenuItem.Icon>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CommandRefresh, Mode=OneWay, Source={x:Static viewModel:TrashExplorerVM.GetInstance}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="还原" Visibility="{Binding ContextMenuModel.IsVisibleRestore, Mode=TwoWay, Source={x:Static viewModel:TrashExplorerVM.GetInstance}}">
                        <MenuItem.Icon>
                            <Image Source="{Binding ContextMenuModel.OpenImage, Source={x:Static viewModel:TrashExplorerVM.GetInstance}}" />
                        </MenuItem.Icon>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CommandRestore, Mode=OneWay, Source={x:Static viewModel:TrashExplorerVM.GetInstance}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="删除" Visibility="{Binding ContextMenuModel.IsVisibleCompleteDelete, Mode=TwoWay, Source={x:Static viewModel:TrashExplorerVM.GetInstance}}">
                        <MenuItem.Icon>
                            <Image Source="{Binding ContextMenuModel.DeleteImage, Source={x:Static viewModel:TrashExplorerVM.GetInstance}}" />
                        </MenuItem.Icon>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CommandDelete, Mode=OneWay, Source={x:Static viewModel:TrashExplorerVM.GetInstance}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="清空回收站" Visibility="{Binding ContextMenuModel.IsVisibleAllDelete, Mode=TwoWay, Source={x:Static viewModel:TrashExplorerVM.GetInstance}}">
                        <MenuItem.Icon>
                            <Image Source="{Binding ContextMenuModel.DeleteImage, Source={x:Static viewModel:TrashExplorerVM.GetInstance}}" />
                        </MenuItem.Icon>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CommandAllDelete, Mode=OneWay, Source={x:Static viewModel:TrashExplorerVM.GetInstance}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <MenuItem Header="属性" Visibility="{Binding ContextMenuModel.IsVisibleTrashProperty, Mode=TwoWay, Source={x:Static viewModel:TrashExplorerVM.GetInstance}}">
                        <MenuItem.Icon>
                            <Image Source="{Binding ContextMenuModel.PropertyImage, Source={x:Static viewModel:TrashExplorerVM.GetInstance}}" />
                        </MenuItem.Icon>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CommandProperty, Mode=OneWay, Source={x:Static viewModel:TrashExplorerVM.GetInstance}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                    <i:Interaction.Triggers>
                        <i:EventTrigger>
                            <i:InvokeCommandAction Command="{Binding LoadedContextMenu, Mode=OneWay}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.View>
                <GridView>
                    <GridViewColumn>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Image Height="30" Source="{Binding ImageSource}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="名称" />
                    <GridViewColumn DisplayMemberBinding="{Binding OriginSite}" Header="原位置" />
                    <GridViewColumn DisplayMemberBinding="{Binding Type}" Header="类型" />
                    <GridViewColumn DisplayMemberBinding="{Binding Size}" Header="大小" />
                    <GridViewColumn DisplayMemberBinding="{Binding ModifyTime}" Header="删除时间" />
                </GridView>
            </ListView.View>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding DblClick, Mode=OneWay}" CommandParameter="{Binding SelectedItem, ElementName=ListView_Explorer}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding Click, Mode=OneWay}" CommandParameter="{Binding SelectedItem, ElementName=ListView_Explorer}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding ClickMouseLeftButtonDown, Mode=OneWay}" CommandParameter="{Binding ItemsSource, ElementName=ListView_Explorer}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseRightButtonDown">
                    <i:InvokeCommandAction Command="{Binding ClickMouseLeftButtonDown, Mode=OneWay}" CommandParameter="{Binding ItemsSource, ElementName=ListView_Explorer}" />
                </i:EventTrigger>
                <!--<i:EventTrigger>
                    <i:InvokeCommandAction Command="{Binding Click, Mode=OneWay}" CommandParameter="{Binding ItemsSource, ElementName=ListView_Explorer}" />
                </i:EventTrigger>-->
            </i:Interaction.Triggers>
        </ListView>
    </Grid>
</UserControl>